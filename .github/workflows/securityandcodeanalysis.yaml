name: Security and Static Code Analysis Workflow (HuskyCI and CircleCI)

on:
  push:
    branches: [main, aidan-branch]
  pull_request:
    branches: [main, aidan-branch]

jobs:
  static_analysis:
    name: Security and Static Code Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Docker for HuskyCI
        run: |
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      - name: Install HuskyCI Security Scanner
        run: |
          git clone https://github.com/globocom/huskyci.git
          cd huskyci
          docker-compose up -d

      - name: Create HuskyCI Configuration File
        run: |
          echo "
          apiVersion: v1
          kind: Config
          clusters:
            - name: huskyci-cluster
              cluster:
                server: http://127.0.0.1:8888
          contexts:
            - name: huskyci-context
              context:
                cluster: huskyci-cluster
          users:
            - name: huskyci
              user:
                token: 'your-auth-token'
          current-context: huskyci-context
          " > huskyci/config.yaml

      - name: Run HuskyCI Security Scan
        run: |
          cd huskyci
          ./huskyci-client scan \
            --url https://github.com/VCSTDN2024/xbcad7319-poe-the_a_team.git \
            --author "ST10071160" \
            --output json > huskyci-report.json
        env:
          HUSKYCI_CLIENT_CONFIG: ./huskyci/config.yaml

      - name: Display HuskyCI Report
        run: cat huskyci/huskyci-report.json

      - name: Upload HuskyCI Report
        uses: actions/upload-artifact@v3
        with:
          name: huskyci-report
          path: huskyci/huskyci-report.json

      - name: Run Static Code Scan through Lint
        run: ./gradlew lint

  test_pull_request:
    name: Test Pull Requests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Permissions for Gradle
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew test
